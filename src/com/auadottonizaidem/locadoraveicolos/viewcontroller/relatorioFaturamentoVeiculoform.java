/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open t   he template in the editor.
 */

package com.auadottonizaidem.locadoraveicolos.viewcontroller;

import com.auadottonizaidem.locadoraveicolos.model.Locacao;
import com.auadottonizaidem.locadoraveicolos.model.Veiculo;
import com.auadottonizaidem.locadoraveiculo.utils.DBConnection;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author auadtassio
 */
public class relatorioFaturamentoVeiculoform extends javax.swing.JFrame {

    private EntityManager entityManager;
    
    /**
     * Creates new form relatorioFaturamentoVeiculoform
     */
    public relatorioFaturamentoVeiculoform() {
        initComponents();
        
        entityManager = DBConnection.getEntityManager();
        
        Query query = entityManager.createNamedQuery("Veiculo.findAll");
        List<Veiculo> veiculos = query.getResultList();

        tableVeiculos.clearSelection();
        tableVeiculos.removeAll();

        DefaultTableModel tm = (DefaultTableModel) tableVeiculos.getModel();
        tm.getDataVector().removeAllElements();

        for (Veiculo v : veiculos) {
            Date d = new Date(v.getDataFabricacao());
            float faturamentoTotal = 0;
            List<Locacao> llocacao = entityManager.createNamedQuery("Locacao.findByVeiculoLocado")
                    .setParameter("veiculoLocado", v).getResultList();
            
            for(Locacao locacao : llocacao) {
                
                if(locacao.getDataDevolucao() != 0) {
                    int diaLocacao = Integer.parseInt(new SimpleDateFormat("dd")
                    .format(locacao.getDataLocacao()));
                    int diaDevolucao = Integer.parseInt(new SimpleDateFormat("dd")
                            .format(locacao.getDataLocacao()));
                    int mesLocacao = Integer.parseInt(new SimpleDateFormat("MM")
                            .format(locacao.getDataLocacao()));
                    int mesDevolucao = Integer.parseInt(new SimpleDateFormat("MM")
                            .format(locacao.getDataLocacao()));

                    int diasDeLocacao = diaDevolucao - diaLocacao;
                    if(diasDeLocacao == 0) diasDeLocacao = 1;
                    if(mesDevolucao != mesLocacao) {
                        diasDeLocacao *= ((mesDevolucao - mesLocacao) * 30);
                    }

                    float valorLocacao = locacao.getVeiculoLocado().getPreco().floatValue() 
                            * diasDeLocacao;

                    faturamentoTotal += valorLocacao;
                }
            }
            
            tm.addRow(new Object[]{
                v.getId(),
                v.getNome(),
                v.getMarca(),
                v.getCilindrada(),
                v.getCor(),
                v.getPlaca(),
                new SimpleDateFormat("dd/MM/yyyy").format(d),
                faturamentoTotal
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableVeiculos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonL = new javax.swing.JButton();
        buttonb = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tableVeiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Marca", "Cilindrada", "Cor", "Placa", "Data", "Faturamento Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableVeiculos);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtros"));

        jLabel1.setText("Nome");

        jLabel2.setText("Marca");

        buttonL.setText("Limpar");
        buttonL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLActionPerformed(evt);
            }
        });

        buttonb.setText("Buscar");
        buttonb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 738, Short.MAX_VALUE)
                        .addComponent(buttonb, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonL, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonL)
                    .addComponent(buttonb))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLActionPerformed
        jTextField1.setText("");
        jTextField2.setText("");
        
        Query query = entityManager.createNamedQuery("Veiculo.findAll");
        List<Veiculo> veiculos = query.getResultList();

        tableVeiculos.clearSelection();
        tableVeiculos.removeAll();

        DefaultTableModel tm = (DefaultTableModel) tableVeiculos.getModel();
        tm.getDataVector().removeAllElements();

        for (Veiculo v : veiculos) {
            Date d = new Date(v.getDataFabricacao());
            float faturamentoTotal = 0;
            List<Locacao> llocacao = entityManager.createNamedQuery("Locacao.findByVeiculoLocado")
                    .setParameter("veiculoLocado", v).getResultList();
            
            for(Locacao locacao : llocacao) {
                
                if(locacao.getDataDevolucao() != 0) {
                    int diaLocacao = Integer.parseInt(new SimpleDateFormat("dd")
                    .format(locacao.getDataLocacao()));
                    int diaDevolucao = Integer.parseInt(new SimpleDateFormat("dd")
                            .format(locacao.getDataLocacao()));
                    int mesLocacao = Integer.parseInt(new SimpleDateFormat("MM")
                            .format(locacao.getDataLocacao()));
                    int mesDevolucao = Integer.parseInt(new SimpleDateFormat("MM")
                            .format(locacao.getDataLocacao()));

                    int diasDeLocacao = diaDevolucao - diaLocacao;
                    if(diasDeLocacao == 0) diasDeLocacao = 1;
                    if(mesDevolucao != mesLocacao) {
                        diasDeLocacao *= ((mesDevolucao - mesLocacao) * 30);
                    }

                    float valorLocacao = locacao.getVeiculoLocado().getPreco().floatValue() 
                            * diasDeLocacao;

                    faturamentoTotal += valorLocacao;
                }
            }
            
            tm.addRow(new Object[]{
                v.getId(),
                v.getNome(),
                v.getMarca(),
                v.getCilindrada(),
                v.getCor(),
                v.getPlaca(),
                new SimpleDateFormat("dd/MM/yyyy").format(d),
                faturamentoTotal
            });
        }
    }//GEN-LAST:event_buttonLActionPerformed

    private void buttonbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonbActionPerformed
            Query query = entityManager.createNamedQuery("Veiculo.findByNomeAndMarca")
                .setParameter("nome", "%"+jTextField1.getText().toLowerCase()+"%")
                    .setParameter("marca", "%"+jTextField2.getText().toLowerCase()+"%");
        List<Veiculo> veiculos = query.getResultList();

        if(veiculos.size() == 0) {
            JOptionPane.showMessageDialog(null, "Nenhum veiculo encontrado!");
            return ;
        }
        
        tableVeiculos.clearSelection();
        tableVeiculos.removeAll();
        
        DefaultTableModel tm = (DefaultTableModel) tableVeiculos.getModel();
        tm.getDataVector().removeAllElements();

        for (Veiculo v : veiculos) {
            Date d = new Date(v.getDataFabricacao());
            float faturamentoTotal = 0;
            List<Locacao> llocacao = entityManager.createNamedQuery("Locacao.findByVeiculoLocado")
                    .setParameter("veiculoLocado", v).getResultList();
            
            for(Locacao locacao : llocacao) {
                
                if(locacao.getDataDevolucao() != 0) {
                    int diaLocacao = Integer.parseInt(new SimpleDateFormat("dd")
                    .format(locacao.getDataLocacao()));
                    int diaDevolucao = Integer.parseInt(new SimpleDateFormat("dd")
                            .format(locacao.getDataLocacao()));
                    int mesLocacao = Integer.parseInt(new SimpleDateFormat("MM")
                            .format(locacao.getDataLocacao()));
                    int mesDevolucao = Integer.parseInt(new SimpleDateFormat("MM")
                            .format(locacao.getDataLocacao()));

                    int diasDeLocacao = diaDevolucao - diaLocacao;
                    if(diasDeLocacao == 0) diasDeLocacao = 1;
                    if(mesDevolucao != mesLocacao) {
                        diasDeLocacao *= ((mesDevolucao - mesLocacao) * 30);
                    }

                    float valorLocacao = locacao.getVeiculoLocado().getPreco().floatValue() 
                            * diasDeLocacao;

                    faturamentoTotal += valorLocacao;
                }
            }
            
            tm.addRow(new Object[]{
                v.getId(),
                v.getNome(),
                v.getMarca(),
                v.getCilindrada(),
                v.getCor(),
                v.getPlaca(),
                new SimpleDateFormat("dd/MM/yyyy").format(d),
                faturamentoTotal
            });
        }
    }//GEN-LAST:event_buttonbActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonL;
    private javax.swing.JButton buttonb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable tableVeiculos;
    // End of variables declaration//GEN-END:variables
}
