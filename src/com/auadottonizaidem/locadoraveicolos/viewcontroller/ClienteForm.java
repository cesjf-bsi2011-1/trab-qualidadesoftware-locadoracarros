/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.auadottonizaidem.locadoraveicolos.viewcontroller;

import com.auadottonizaidem.locadoraveicolos.model.Cliente;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aparecida
 */
public class ClienteForm extends javax.swing.JFrame {

    Cliente cli = null;
    EntityManager entity;
    List<Cliente> listClientes;
    Query query = null;
    int id;

    /**
     * Creates new form ClienteForm
     */
    public ClienteForm() {
        EntityManagerFactory factory = Persistence.createEntityManagerFactory("LocadoraVeiculosPU");
        entity = factory.createEntityManager();

        entity.getTransaction().begin();

        query = entity.createNamedQuery("Cliente.findAll");


        initComponents();

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date dataCad = new Date();
        String currentData = sdf.format(dataCad);

        tfDataCadastro.setText(currentData);

        tfDataCadastro.setEnabled(false);

        atualizaTabela();
    }

    private void atualizaTabela() {

        listClientes = query.getResultList();

        tbClientes.clearSelection();
        tbClientes.removeAll();

        DefaultTableModel dfTable = (DefaultTableModel) tbClientes.getModel();
        dfTable.getDataVector().removeAllElements();

        for (Cliente c : listClientes) {

            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy"); // Set your date format

            Date dataNasc = new Date();
            Date dataCad = new Date();

            dataNasc.setTime(c.getDataNascimento());

            dataCad.setTime(c.getDataCadastro());

            String currentData = sdf.format(dataCad);
            String currentData2 = sdf.format(dataNasc);

            dfTable.addRow(new Object[]{
                c.getId(),
                c.getNomeCompleto(),
                c.getCpf(),
                c.getSexo(),
                currentData,
                currentData2
            });

        }
    }

    public void limpaCampos() {
        tfCPF.setText("");
        tfDataCadastro.setText("");
        tfDataNascimento.setText("");
        tfNome.setText("");
        btEditar.setEnabled(false);
        btSalvar.setEnabled(false);
        btExcluir.setEnabled(false);
        btNovo.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfNome = new javax.swing.JTextField();
        lbNome = new javax.swing.JLabel();
        lbCPF = new javax.swing.JLabel();
        tfCPF = new javax.swing.JFormattedTextField();
        lbDataNascimento = new javax.swing.JLabel();
        lbSexo = new javax.swing.JLabel();
        cbSexo = new javax.swing.JComboBox();
        tfDataCadastro = new javax.swing.JFormattedTextField();
        lbDataCadastro = new javax.swing.JLabel();
        btSalvar = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        tfDataNascimento = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbClientes = new javax.swing.JTable();
        btNovo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Clientes");
        setName("formCliente"); // NOI18N

        tfNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNomeActionPerformed(evt);
            }
        });

        lbNome.setText("Nome Completo: *");

        lbCPF.setText("CPF: *");

        try {
            tfCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lbDataNascimento.setText("Data de Nascimento:");

        lbSexo.setText("Sexo:");

        cbSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "Feminino" }));

        try {
            tfDataCadastro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lbDataCadastro.setText("Data do Cadastro:");

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        jButton4.setText("Sair");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        try {
            tfDataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        tbClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOME", "CPF", "SEXO", "DATA NASC.", "DATA CAD."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbClientes);

        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNome)
                            .addComponent(lbCPF)
                            .addComponent(lbSexo)
                            .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbDataNascimento)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfDataCadastro, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tfCPF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                            .addComponent(tfDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(225, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btSalvar)
                                .addGap(26, 26, 26)
                                .addComponent(btEditar)
                                .addGap(33, 33, 33)
                                .addComponent(btExcluir)
                                .addGap(18, 18, 18)
                                .addComponent(btNovo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbDataCadastro)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lbNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbSexo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbCPF)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbDataNascimento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(lbDataCadastro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar)
                    .addComponent(btEditar)
                    .addComponent(btExcluir)
                    .addComponent(jButton4)
                    .addComponent(btNovo))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        lbNome.getAccessibleContext().setAccessibleName("lbNome");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNomeActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // TODO add your handling code here:
        String nome = tfNome.getText();
        String cpf = tfCPF.getText();
        String dataNasc = tfDataNascimento.getText();

        if (nome.equals("") || cpf.equals("")) {
            JOptionPane.showMessageDialog(null, "Campos Obrigatorios não Preenchidos!");
        } else {
            cli = new Cliente();
            cli.setNomeCompleto(nome);
            cli.setCpf(cpf);
            cli.setSexo("M");
            DateFormat dtFormat = new SimpleDateFormat("dd/MM/yyyy");
            try {
                Date dataNascimento = dtFormat.parse(dataNasc);
                cli.setDataNascimento(dataNascimento.getTime());
                Date dtCad = new Date();
                cli.setDataCadastro(dtCad.getTime());
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Data Invalida!");
            }
            try {
                entity.persist(cli);
                entity.getTransaction().commit();
                JOptionPane.showMessageDialog(null, "Cliente Cadastrado com Sucesso!");
            } catch (Exception e) {
                entity.getTransaction().rollback();
                JOptionPane.showMessageDialog(null, "Algo Deu Errado, Cliente não Cadastrado!");
            }
        }
        atualizaTabela();
        limpaCampos();
        btEditar.setEnabled(false);
        btSalvar.setEnabled(false);
        btExcluir.setEnabled(false);
        btNovo.setEnabled(true);

    }//GEN-LAST:event_btSalvarActionPerformed

    public static void main(String[] args) {
        new ClienteForm().setVisible(true);
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        // TODO add your handling code here:
        limpaCampos();
        btSalvar.setEnabled(true);
    }//GEN-LAST:event_btNovoActionPerformed

    private void tbClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbClientesMouseClicked
        // TODO add your handling code here:
        int linha = tbClientes.getSelectedRow();

        if (linha < 0) {
            return;
        }

        DefaultTableModel tm;
        tm = (DefaultTableModel) tbClientes.getModel();
        id = (int) tm.getValueAt(linha, 0);
        tfNome.setText((String) tm.getValueAt(linha, 1));
        tfCPF.setText((String) tm.getValueAt(linha, 2));
        tfDataNascimento.setText((String) tm.getValueAt(linha, 4));
        tfDataCadastro.setText((String) tm.getValueAt(linha, 5));


        btNovo.setEnabled(false);
        btEditar.setEnabled(true);
        btExcluir.setEnabled(true);
        btSalvar.setEnabled(false);

    }//GEN-LAST:event_tbClientesMouseClicked

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        // TODO add your handling code here:

        String nome = tfNome.getText();
        String cpf = tfCPF.getText();
        String dataNasc = tfDataNascimento.getText();

        Cliente cliente = entity.find(Cliente.class, id);

        if (nome.equals("") || cpf.equals("")) {
            JOptionPane.showMessageDialog(null, "Campos Obrigatorios não Preenchidos!");
        } else {
            cliente.setNomeCompleto(nome);
            cliente.setCpf(cpf);
            cliente.setSexo("M");
            DateFormat dtFormat = new SimpleDateFormat("dd/MM/yyyy");
            try {
                Date dataNascimento = dtFormat.parse(dataNasc);
                cliente.setDataNascimento(dataNascimento.getTime());
                Date dtCad = new Date();
                cliente.setDataCadastro(dtCad.getTime());
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Data Invalida!");
            }
            try {
                entity.getTransaction().commit();
                JOptionPane.showMessageDialog(null, "Cliente Editado com Sucesso!");
            } catch (Exception e) {
                entity.getTransaction().rollback();
                JOptionPane.showMessageDialog(null, "Algo Deu Errado, Cliente não Editado!");
            }
        }
        atualizaTabela();
        limpaCampos();

    }//GEN-LAST:event_btEditarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        // TODO add your handling code here:
        try{
            Cliente cliente = entity.find(Cliente.class, id);
            entity.remove(cliente);
            JOptionPane.showMessageDialog(null, "Cliente Excluido com Sucesso!");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Algo Deu Errado, Cliente não Excluido!");
        }
        atualizaTabela();
        limpaCampos();
    }//GEN-LAST:event_btExcluirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox cbSexo;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCPF;
    private javax.swing.JLabel lbDataCadastro;
    private javax.swing.JLabel lbDataNascimento;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbSexo;
    private javax.swing.JTable tbClientes;
    private javax.swing.JFormattedTextField tfCPF;
    private javax.swing.JFormattedTextField tfDataCadastro;
    private javax.swing.JFormattedTextField tfDataNascimento;
    private javax.swing.JTextField tfNome;
    // End of variables declaration//GEN-END:variables
}
